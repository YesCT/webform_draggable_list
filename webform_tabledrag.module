<?php
/**
 * @file
 *
 */
// Tabledrag depends on functions provided by select.
webform_component_include('select');
/**
 * Implements hook_webform_component_info().
 */
function webform_tabledrag_webform_component_info() {
  $components = array();

  $components['tabledrag'] = array(
    'label' => t('Table drag'),
    'description' => t('Allow users to order a list with drag and drop and save the order'),
    'features' => array(
      'required' => FALSE,
    )
  );
  return $components;
}

/**
 * Implements _webform_default_component().
 */
function _webform_defaults_tabledrag() {
  return array(
    'name' => '',
    'form_key' => NULL,
    'mandatory' => 0,
    'pid' => 0,
    'weight' => 0,
    'extra' => array(
      'rows' => '',
      'title_display' => 0,
      'description' => '',
      'private' => 0,
    ),
  );
}

/**
 * Implements _webform_render_component().
 */
function _webform_render_tabledrag($component, $value = NULL) {
  $form_item = array(
    '#type' => 'tabledrag',
    '#title' => _webform_filter_xss($component['name']),
    '#weight' => $component['weight'],
    '#webform_component' => $component,
    '#description'   => _webform_filter_descriptions($component['extra']['description']),
    '#default_value' => _webform_filter_values($component['value']),
    '#theme_wrappers' => array('webform_element'),
    '#theme' => array('tabledrag'),
    '#prefix' => '<div class="webform-component-' . $component['type'] . '" id="webform-component-' . $component['form_key'] . '">',
    '#suffix' => '</div>',
    '#rows' => _webform_select_options_from_text($component['extra']['rows']),
    //set a marker for theme_tabledrag so the table is draggable
    '#tabledrag_draggable' => TRUE,
  );

  _webform_tabledrag_expand_tabledrag($form_item, $component, $value);

  return $form_item;
}

function _webform_tabledrag_expand_tabledrag(&$tabledrag, $component, $value) {
  $weight = array(0);
  for ($w = 0; $w < count($tabledrag['#rows']); $w++) {
    $weight[$w] = $w;
  }
  foreach ($tabledrag['#rows'] as $key => $row) {
    $tabledrag[$key] = array(
      '#type' => 'select',
      '#options' => $weight,
      '#default_value' => 0,
      '#title' => 'Weight',
      '#attributes' => array('class' => array("my-weight-{$component['form_key']}")),
    );
    if (!empty($value)) {
      $tabledrag[$key]['#value'] = $value[$key];
      //put the list in the right order.
      $tabledrag[$key]['#weight'] = $value[$key];
    }
  }
}

/**
 * Implements _webform_theme_component
 */
function _webform_theme_tabledrag() {
  return array(
    'tabledrag' => array(
      'render element' => 'element',
    ),
  );
}

function theme_tabledrag($variables) {
  $form = $variables['element'];
  $rows = $form['#rows'];
  $draggable = $form['#tabledrag_draggable'];
  $i = 0;
  $el_id = $variables['element']['#id'];
  $table_rows = array();
  foreach (element_children($form) as $key) {
    $row = $rows[$key];
    $this_row = array();
    $item = array(
      "item$i" => array(
        '#markup' => $row,
      ),
    );
    $this_row[] = array('data' => drupal_render($item));
    if ($draggable) {
      $this_row[] = array('data' => drupal_render($form[$key]));
    }

    $table_rows[] = array('data' => $this_row, 'class' => array('draggable'));
    $i++;
  }
  if ($draggable) {
    drupal_add_tabledrag($el_id, 'order', 'sibling', "my-weight-{$variables['element']['#webform_component']['form_key']}");
  }
  $form = array(
    '#type' => 'markup',
    '#markup' => theme('table', array('rows' => $table_rows, 'attributes' => array('id' => $el_id))),
    '#weight' => '1',
  );
  $output = drupal_render($form);
  return $output;
}

/**
 * Implements _webform_display_component().
 */
function _webform_display_tabledrag($component, $value, $format = 'html') {
  $tabledrag = array(
    '#title' => $component['name'],
    '#weight' => $component['weight'],
    '#description'   => _webform_filter_descriptions($component['extra']['description']),
    '#theme_wrappers' => $format == 'html' ? array('webform_element') : array('webform_element_text'),
    '#post_render' => array('webform_element_wrapper'),
    '#webform_component' => $component,
    '#format' => $format,
    '#rows' => _webform_select_options_from_text($component['extra']['rows']),
  );
  if ($format == 'html') {
    $tabledrag +=  array(
      //set a marker for theme_tabledrag so the display isn't draggable
      '#tabledrag_draggable' => FALSE,
      '#theme' => array('tabledrag'),
    );

    _webform_tabledrag_expand_tabledrag($tabledrag, $component, $value);
  }
  else {
    asort($value, SORT_NUMERIC);
    $items = array();
    if (!empty($value)) {
      foreach ($value as $key => $val) {
        $items[] = "-{$tabledrag['#rows'][$key]}: {$val}";
      }
    }
    $tabledrag += array(
      '#type' => 'item',
      '#markup' => implode("\n", $items),
    );
  }
  return $tabledrag;
}

/**
 * Implements _webform_edit_component().
 */
function _webform_edit_tabledrag($component) {
  $form['extra']['rows'] = array(
    '#type' => 'textarea',
    '#title' => t('Rows'),
    '#default_value' => $component['extra']['rows'],
    '#description' => t('Values of the list item. One row per line. <strong>Key-value pairs MUST be specified as "safe_key|Some readable option"</strong>') . theme('webform_token_help'),
    '#cols' => 60,
    '#rows' => 5,
    '#weight' => -2,
    '#required' => TRUE,
    '#wysiwyg' => FALSE,
  );
  return $form;
}

/**
 * Implements _webform_analysis_component().
 */
function _webform_analysis_tabledrag($component, $sids = array()) {
  // Generate the list of options and questions.
  $tabledrag_rows = _webform_select_options_from_text($component['extra']['rows'], TRUE);

  // Generate a lookup table of results.
  $query = db_select('webform_submitted_data', 'wsd')
    ->fields('wsd', array('no', 'data'))
    ->condition('nid', $component['nid'])
    ->condition('cid', $component['cid'])
    ->condition('data', '', '<>')
    ->groupBy('no')
    ->groupBy('data');
  $query->addExpression('COUNT(sid)', 'datacount');

  if (count($sids)) {
    $query->condition('sid', $sids, 'IN');
  }

  $result = $query->execute();
  $counts = array();
  $weights = array();
  foreach ($result as $data) {
    $counts[$data->no][$data->data] = $data->datacount;
    $weights[$data->data] = $data->data;
  }
  ksort($weights);

  // Create an entire table to be put into the returned row.
  $rows = array();
  $header = array('');
  foreach ($weights as $weight) {
    $header[] = t('Weight: !weight', array('!weight' => $weight));
  }
  foreach ($tabledrag_rows as $tabledrag_rowkey => $tabledrag_row) {
    $row = array(_webform_filter_xss($tabledrag_row));
    foreach ($weights as $weight) {
      $row[] = !empty($counts[$tabledrag_rowkey][$weight]) ? $counts[$tabledrag_rowkey][$weight] : 0;
    }
    $rows[] = $row;
  }

  $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('webform-grid'))));
  return array(array(array('data' => $output, 'colspan' => 2)));
}

/**
 * Implements _webform_table_component().
 */
function _webform_table_tabledrag($component, $value) {
  $rows = _webform_select_options_from_text($component['extra']['rows'], TRUE);
  $output = '';
  // Set the value as a single string.
  if (is_array($value)) {
    foreach ($value as $item => $value) {
      if ($value !== '') {
        $output .= t('Row') . ': ' . _webform_filter_xss($rows[$item]) . '<br />';
        $output .= t('Weight') . ': ' . _webform_filter_xss($value) . '<br />' . '<br />';
      }
    }
  }
  else {
    $output = !isset($value[0]) ? '' : _webform_filter_xss($value[0]);
  }
  return $output;
}

/**
 * Implements _webform_csv_headers_component().
 */
function _webform_csv_headers_tabledrag($component, $export_options) {
  $header = array();
  $header[0] = array('');
  $header[1] = array($component['name']);
  $items = _webform_select_options_from_text($component['extra']['rows'], TRUE);
  $count = 0;
  foreach ($items as $key => $item) {
    // Empty column per sub-field in main header.
    if ($count != 0) {
      $header[0][] = '';
      $header[1][] = '';
    }
    // The value for this option.
    $header[2][] = $item;
    $count++;
  }

  return $header;
}

/**
 * Implements _webform_csv_data_component().
 */
function _webform_csv_data_tabledrag($component, $export_options, $value) {
  $rows = _webform_select_options_from_text($component['extra']['rows'], TRUE);
  $return = array();
  foreach ($rows as $key => $row) {
    if (isset($value[$key])) {
      $return[] = $value[$key];
    }
    else {
      $return[] = '';
    }
  }
  return $return;
}
